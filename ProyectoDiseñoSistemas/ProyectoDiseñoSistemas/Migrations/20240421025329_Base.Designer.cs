// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoDiseñoSistemas.Data;

#nullable disable

namespace ProyectoDiseñoSistemas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240421025329_Base")]
    partial class Base
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Bodega", b =>
                {
                    b.Property<int>("IdBodegas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBodegas"));

                    b.Property<int>("CantonIdCanton")
                        .HasColumnType("int");

                    b.Property<string>("DireccionExacta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistritoIdDistrito")
                        .HasColumnType("int");

                    b.Property<int>("IdCanton")
                        .HasColumnType("int");

                    b.Property<int>("IdDistrito")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<int>("ProvinciaIdProvincia")
                        .HasColumnType("int");

                    b.HasKey("IdBodegas");

                    b.HasIndex("CantonIdCanton");

                    b.HasIndex("DistritoIdDistrito");

                    b.HasIndex("ProvinciaIdProvincia");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Canton", b =>
                {
                    b.Property<int>("IdCanton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCanton"));

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaIdProvincia")
                        .HasColumnType("int");

                    b.HasKey("IdCanton");

                    b.HasIndex("ProvinciaIdProvincia");

                    b.ToTable("Cantones");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Distrito", b =>
                {
                    b.Property<int>("IdDistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDistrito"));

                    b.Property<int>("CantonIdCanton")
                        .HasColumnType("int");

                    b.Property<int>("IdCanton")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDistrito");

                    b.HasIndex("CantonIdCanton");

                    b.ToTable("Distritos");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("MontoDeuda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Pendiente")
                        .HasColumnType("bit");

                    b.Property<int>("ProveedorIdProveedores")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdFactura");

                    b.HasIndex("ProveedorIdProveedores");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Pedidos", b =>
                {
                    b.Property<int>("IdPedidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedidos"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorIdProveedores")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdPedidos");

                    b.HasIndex("ProveedorIdProveedores");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.ProductoFactura", b =>
                {
                    b.Property<int>("IdProductoFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoFactura"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturaIdFactura")
                        .HasColumnType("int");

                    b.Property<int>("IdFactura")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("ProductoIdProductos")
                        .HasColumnType("int");

                    b.HasKey("IdProductoFactura");

                    b.HasIndex("FacturaIdFactura");

                    b.HasIndex("ProductoIdProductos");

                    b.ToTable("ProductosFacturas");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.ProductoPedido", b =>
                {
                    b.Property<int>("IdProductosPedidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductosPedidos"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdPedidos")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("PedidoIdPedidos")
                        .HasColumnType("int");

                    b.Property<int>("ProductoIdProductos")
                        .HasColumnType("int");

                    b.HasKey("IdProductosPedidos");

                    b.HasIndex("PedidoIdPedidos");

                    b.HasIndex("ProductoIdProductos");

                    b.ToTable("ProductosPedidos");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Productos", b =>
                {
                    b.Property<int>("IdProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductos"));

                    b.Property<int>("CantidadEmpaque")
                        .HasColumnType("int");

                    b.Property<int>("CantidadPresentacion")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEmpaque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProductos");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedores"));

                    b.Property<int>("CantonIdCanton")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionExacta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistritoIdDistrito")
                        .HasColumnType("int");

                    b.Property<int>("IdCanton")
                        .HasColumnType("int");

                    b.Property<int>("IdDistrito")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaIdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedores");

                    b.HasIndex("CantonIdCanton");

                    b.HasIndex("DistritoIdDistrito");

                    b.HasIndex("ProvinciaIdProvincia");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProvincia");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BodegaIdBodegas")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("BodegaIdBodegas");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Bodega", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Canton", "Canton")
                        .WithMany()
                        .HasForeignKey("CantonIdCanton")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoIdDistrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaIdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");

                    b.Navigation("Distrito");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Canton", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaIdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Distrito", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Canton", "Canton")
                        .WithMany()
                        .HasForeignKey("CantonIdCanton")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Factura", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorIdProveedores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Pedidos", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorIdProveedores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.ProductoFactura", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaIdFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoIdProductos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.ProductoPedido", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Pedidos", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoIdPedidos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoIdProductos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Proveedor", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Canton", "Canton")
                        .WithMany()
                        .HasForeignKey("CantonIdCanton")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoIdDistrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDiseñoSistemas.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaIdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");

                    b.Navigation("Distrito");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ProyectoDiseñoSistemas.Models.Usuarios", b =>
                {
                    b.HasOne("ProyectoDiseñoSistemas.Models.Bodega", "Bodega")
                        .WithMany()
                        .HasForeignKey("BodegaIdBodegas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodega");
                });
#pragma warning restore 612, 618
        }
    }
}
